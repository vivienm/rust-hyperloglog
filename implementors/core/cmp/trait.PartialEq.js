(function() {var implementors = {};
implementors["hyperloglog"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"hyperloglog/struct.TryFromIntError.html\" title=\"struct hyperloglog::TryFromIntError\">TryFromIntError</a>&gt; for <a class=\"struct\" href=\"hyperloglog/struct.TryFromIntError.html\" title=\"struct hyperloglog::TryFromIntError\">TryFromIntError</a>","synthetic":false,"types":["hyperloglog::error::TryFromIntError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"hyperloglog/enum.TryMergeErrorKind.html\" title=\"enum hyperloglog::TryMergeErrorKind\">TryMergeErrorKind</a>&gt; for <a class=\"enum\" href=\"hyperloglog/enum.TryMergeErrorKind.html\" title=\"enum hyperloglog::TryMergeErrorKind\">TryMergeErrorKind</a>","synthetic":false,"types":["hyperloglog::error::TryMergeErrorKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"hyperloglog/struct.TryMergeError.html\" title=\"struct hyperloglog::TryMergeError\">TryMergeError</a>&gt; for <a class=\"struct\" href=\"hyperloglog/struct.TryMergeError.html\" title=\"struct hyperloglog::TryMergeError\">TryMergeError</a>","synthetic":false,"types":["hyperloglog::error::TryMergeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"hyperloglog/enum.Precision.html\" title=\"enum hyperloglog::Precision\">Precision</a>&gt; for <a class=\"enum\" href=\"hyperloglog/enum.Precision.html\" title=\"enum hyperloglog::Precision\">Precision</a>","synthetic":false,"types":["hyperloglog::precision::Precision"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()