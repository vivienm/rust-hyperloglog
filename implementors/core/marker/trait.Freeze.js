(function() {var implementors = {};
implementors["hyperloglog"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"hyperloglog/struct.TryFromIntError.html\" title=\"struct hyperloglog::TryFromIntError\">TryFromIntError</a>","synthetic":true,"types":["hyperloglog::error::TryFromIntError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hyperloglog/enum.TryMergeErrorKind.html\" title=\"enum hyperloglog::TryMergeErrorKind\">TryMergeErrorKind</a>","synthetic":true,"types":["hyperloglog::error::TryMergeErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hyperloglog/struct.TryMergeError.html\" title=\"struct hyperloglog::TryMergeError\">TryMergeError</a>","synthetic":true,"types":["hyperloglog::error::TryMergeError"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, S&gt; Freeze for <a class=\"struct\" href=\"hyperloglog/struct.HyperLogLog.html\" title=\"struct hyperloglog::HyperLogLog\">HyperLogLog</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hyperloglog::hyperloglog::HyperLogLog"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hyperloglog/enum.Precision.html\" title=\"enum hyperloglog::Precision\">Precision</a>","synthetic":true,"types":["hyperloglog::precision::Precision"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()